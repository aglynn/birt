<?php

/**
 * @file
 * Our BIRT Open Source node type will allow users to specify a "reportname"
 *
 */


/**
 * System settings form for BIRT.
 */
function birt_admin() {
  $form = array();

  $form['birt_server_address'] = array(
      '#type' => 'textfield',
      '#title' => t('BIRT Server Address'),
      '#default_value' => variable_get('birt_server_address', ''),
      '#size' => 30,
      '#maxlength' => 100,
      '#description' => t("Please type the URL of your BIRT server.") . ' For example, for http://127.0.0.1:8080/birt/ type in 127.0.0.1:8080/birt',
      '#required' => TRUE,
  );

  $form['javabridge_directory_address'] = array(
    '#type' => 'textfield',
    '#title' => t('JavaBridge Directory Address'),
    '#default_value' => variable_get('javabridge_directory_address', ''),
    '#size' => 30,
    '#maxlength' => 100,
    '#description' => t("Please type the URL of your JavaBridge directory.") . ' For example, for http://127.0.0.1:8080/JavaBridge/ type in 127.0.0.1:8080/JavaBridge',
    '#required' => TRUE,
  );

  return system_settings_form($form);
}


/**
 * Implements hook_menu().
 */
function birt_menu() {
  $items = array();

  $items['admin/config/birt'] = array(
    'title' => 'BIRT settings',
    'description' => 'Settings for integrating BIRT reports into your site',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('birt_admin'),
    'access arguments' => array('Administer BIRT'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_theme().
 */
function birt_theme($var) {
  $item['path'] = drupal_get_path('module', 'birt') . "/theme";
  $item['template'] = 'node--birt';
  return array("node__birt" => $item);
}


/**
 * Implements hook_preprocess_node().
 */
function birt_preprocess_node(&$vars) {
  if ($vars['type'] == 'birt' && $vars['page'] == TRUE) {
    if (file_exists(variable_get('javabridge_directory_address') . "/java/Java.inc")) {
      include_once "http://" . variable_get('javabridge_directory_address') . "/java/Java.inc";
      drupal_add_css(drupal_get_path('module', 'birt') . '/theme/birt.css');

      $file_path = 'private://birt/files/' . $vars['birt_reportfile'][0]['filename'];

      // Create the birtgraphics directory in the public folder.
      drupal_mkdir("public://birtgraphics", NULL, TRUE);

      $birtgraphics_public_path = 'public://birtgraphics/';
      file_unmanaged_copy($file_path, $birtgraphics_public_path, FILE_EXISTS_REPLACE);
      variable_set('birtgraphics_public_folder', $birtgraphics_public_path);


      // Make the public birt file directory if not there already.
      drupal_mkdir("public://birt", NULL, TRUE);

      // Temporarily store a copy of the birt report in the birt public folder.
      $birt_public_path = 'public://birt/';
      file_unmanaged_copy($file_path, $birt_public_path, FILE_EXISTS_REPLACE);

      // Format the URL for the BIRT server.
      $external_design = substr(url('/', array('absolute' => TRUE)), 0, -1) . variable_get('file_public_path', conf_path() . '/files') . '/birt/' . $vars['birt_reportfile'][0]['filename'];

      variable_set('birt_public_folder', $birt_public_path);

      // JavaBridge code starts here.
      $image_url_prefix = substr(url('/', array('absolute' => TRUE)), 0, -1) . variable_get('file_public_path', conf_path() . '/files') . '/birtgraphics/';

      $birtgraphics_path = variable_get('file_public_path', conf_path() . '/files') . '/birtgraphics/';

      $here = getcwd();

      $ctx = java_context()->getServletContext();
      $birt_report_engine = java("org.eclipse.birt.php.birtengine.BirtEngine")->getBirtEngine($ctx);
      java_context()->onShutdown(java("org.eclipse.birt.php.birtengine.BirtEngine")->getShutdownHook());

      try {
        // Pass the .rptdesign file to the JavaBridge to be interpreted by BIRT.
        $report = $birt_report_engine->openReportDesign($external_design);
        $task = $birt_report_engine->createRunAndRenderTask($report);

        $task_options = new java("org.eclipse.birt.report.engine.api.HTMLRenderOption");
        $outputStream = new java("java.io.ByteArrayOutputStream");
        $task_options->setOutputStream($outputStream);
        $task_options->setOutputFormat("html");
        $ih = new java( "org.eclipse.birt.report.engine.api.HTMLServerImageHandler");
        $task_options->setImageHandler($ih);

        $task_options->setBaseImageURL($image_url_prefix . session_id());
        $task_options->setImageDirectory($birtgraphics_path . session_id());

        $task->setRenderOption($task_options);
        $task->run();
        $task->close();

      } catch (JavaException $e) {
        echo $e;
      }

      // Return the generated output to the client.
      $report = java_values($outputStream);

      $vars['report'] == $report;
    }
    else {
      $error = "no_javainfo";
    }
  }
}

/**
 * Implements hook_init().
 */
function birt_init() {
  // Cleans up by deleting public report file and variable that was set.
  // Wasn't able to put this anywhere immediately after page load.
  // Because report wouldn't load.
  if (variable_get('birt_public_folder') !== NULL) {
    $birt_public_folder = variable_get('birt_public_folder');
    file_unmanaged_delete_recursive($birt_public_folder);
    variable_del('birt_public_folder');
  }
  if (variable_get('birtgraphics_public_folder') !== NULL) {
    $birtgraphics_public_folder = variable_get('birtgraphics_public_folder');
    file_unmanaged_delete_recursive($birtgraphics_public_folder);
    variable_del('birtgraphics_public_folder');
  }
}
